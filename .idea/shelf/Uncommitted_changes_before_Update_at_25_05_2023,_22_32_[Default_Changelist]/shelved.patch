Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ /dev/null	(revision 521ffb5da67060121d4796e3ceece465daa76486)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1665675827992)
+++ b/.idea/compiler.xml	(date 1665675827992)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/.idea/misc.xml	(date 1665675827985)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#364CAF50\"\n    tools:context=\".MainActivity\">\n\n\n\n\n    <TextView\n        android:id=\"@+id/txtMainActivityLoggedInAsUserX\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World!\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.047\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintRight_toRightOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.022\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressIconMainActivity\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonOpenOrdersActivity\"\n        style=\"@style/Widget.MaterialComponents.Button.Icon\"\n        android:layout_width=\"150dp\"\n        android:layout_height=\"100dp\"\n        android:text=\"Orders\"\n        app:icon=\"@drawable/ic_orderboard_logo\"\n        app:iconSize=\"40dp\"\n        app:iconPadding=\"8dp\"\n\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.149\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.599\" />\n\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonOpenTimetableActivity\"\n        style=\"@style/Widget.MaterialComponents.Button.Icon\"\n        android:layout_width=\"150dp\"\n        android:layout_height=\"100dp\"\n        android:text=\"Time table\"\n        app:icon=\"@drawable/ic_timetable_logo\"\n        app:iconSize=\"40dp\"\n        app:iconPadding=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.877\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.599\" />\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonOpenShioppingCalculatorActivity\"\n        style=\"@style/Widget.MaterialComponents.Button.Icon\"\n        android:layout_width=\"150dp\"\n        android:layout_height=\"100dp\"\n        android:text=\"Pallet Count\"\n        app:icon=\"@drawable/ic_shipping_calculator_logo\"\n        app:iconSize=\"40dp\"\n        app:iconPadding=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.148\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.85\" />\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonOpenProduceEstimator\"\n        style=\"@style/Widget.MaterialComponents.Button.Icon\"\n        android:layout_width=\"150dp\"\n        android:layout_height=\"100dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.875\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.85\"\n        android:text=\"Estimate Produce For Order\"\n        app:icon=\"@drawable/ic_produce_estimator_logo\"\n        app:iconSize=\"35dp\"\n        app:iconPadding=\"0dp\"/>\n\n    <view\n        android:id=\"@+id/mainActivityTimetableView\"\n        class=\"androidx.coordinatorlayout.widget.CoordinatorLayout\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"200dp\"\n        android:background=\"#FFFFFF\"\n        android:windowIsTranslucent=\"false\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.496\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.185\"\n        tools:context=\".MainActivity\">\n\n\n        <ListView\n            android:id=\"@+id/MainActivityTimeTableListView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:layout_weight=\"20\" />\n\n    </view>\n\n    <TextView\n        android:id=\"@+id/textView3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"5dp\"\n        android:text=\"Timetable\"\n        android:textSize=\"30sp\"\n        app:layout_constraintBottom_toTopOf=\"@+id/mainActivityTimetableView\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1651088128607)
@@ -48,7 +48,7 @@
 
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.149"
+        app:layout_constraintHorizontal_bias="0.1"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.599" />
@@ -65,7 +65,7 @@
         app:iconPadding="8dp"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.877"
+        app:layout_constraintHorizontal_bias="0.9"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.599" />
@@ -81,7 +81,7 @@
         app:iconPadding="8dp"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.148"
+        app:layout_constraintHorizontal_bias="0.11"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.85" />
@@ -93,7 +93,7 @@
         android:layout_height="100dp"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.875"
+        app:layout_constraintHorizontal_bias="0.9"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.85"
Index: app/src/main/res/layout/activity_create_farm.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#364CAF50\"\n    tools:context=\".CreateFarm\">\n\n    <TextView\n        android:id=\"@+id/textViewCreateAccountHeader\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Create Farm\"\n        android:textSize=\"30sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.05\" />\n\n    <ProgressBar\n        android:id=\"@+id/progressIconCreateFarm\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <com.google.android.material.textfield.TextInputLayout\n        android:id=\"@+id/textInputLayout6\"\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\n\n        android:layout_width=\"300dp\"\n        android:layout_height=\"60dp\"\n        android:hint=\"Farm Name\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.60\">\n\n        <com.google.android.material.textfield.TextInputEditText\n            android:id=\"@+id/editTextCreateFarmName\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:inputType=\"text\"\n            android:maxLength=\"40\"\n            android:maxLines=\"1\"\n            android:textAlignment=\"center\"\n            android:textSize=\"20sp\" />\n    </com.google.android.material.textfield.TextInputLayout>\n\n    <com.google.android.material.textfield.TextInputLayout\n        android:id=\"@+id/textInputLayout\"\n        android:layout_width=\"300dp\"\n\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Pass Code\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.75\"\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\n\n        <com.google.android.material.textfield.TextInputEditText\n            android:id=\"@+id/editTextCreateFarmPasscode\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n\n            android:inputType=\"text\"\n            android:maxLines=\"1\"\n            android:textAlignment=\"center\"\n            android:textSize=\"20sp\" />\n    </com.google.android.material.textfield.TextInputLayout>\n\n    <!--\n    <EditText\n        android:id=\"@+id/editTextCreateFarmName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"64dp\"\n        android:ems=\"10\"\n        android:hint=\"Farm Name\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toTopOf=\"@+id/editTextCreateFarmPasscode\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.497\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n    <EditText\n        android:id=\"@+id/editTextCreateFarmPasscode\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"48dp\"\n        android:ems=\"10\"\n        android:hint=\"Pass Code\"\n        android:inputType=\"textEmailAddress\"\n        app:layout_constraintBottom_toTopOf=\"@+id/buttonCreateFarm\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.497\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n        -->\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonCreateFarm\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Create Farm\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.75\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.9\" />\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonJoinFarmActivity\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Join Farm\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.25\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.9\" />\n\n    <TextView\n        android:id=\"@+id/createFarmErrorMessage\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textColor=\"#FF0000\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.82\" />\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"200dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.216\"\n        app:srcCompat=\"@drawable/ic_barn_logo\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_create_farm.xml b/app/src/main/res/layout/activity_create_farm.xml
--- a/app/src/main/res/layout/activity_create_farm.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/app/src/main/res/layout/activity_create_farm.xml	(date 1651088057249)
@@ -114,7 +114,7 @@
         android:text="Create Farm"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.75"
+        app:layout_constraintHorizontal_bias="0.8"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.9" />
@@ -126,7 +126,7 @@
         android:text="Join Farm"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.25"
+        app:layout_constraintHorizontal_bias="0.2"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.9" />
Index: app/src/main/res/layout/activity_join_farm.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#364CAF50\"\n    tools:context=\".JoinFarm\">\n\n    <TextView\n        android:id=\"@+id/textLoginHeader\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Join A farm\"\n        android:textSize=\"30sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.05\" />\n\n    <com.google.android.material.textfield.TextInputLayout\n        android:layout_width=\"300dp\"\n        android:layout_height=\"60dp\"\n\n        android:hint=\"Farm Name\" app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.60\"\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\n\n        <com.google.android.material.textfield.TextInputEditText\n            android:id=\"@+id/editTextJoinFarmName\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:inputType=\"textEmailAddress\"\n            android:maxLength=\"30\"\n            android:maxLines=\"1\"\n            android:textAlignment=\"center\"\n            android:textSize=\"20sp\" />\n    </com.google.android.material.textfield.TextInputLayout>\n\n    <com.google.android.material.textfield.TextInputLayout\n        android:id=\"@+id/textInputLayout3\"\n        android:layout_width=\"300dp\"\n\n        android:layout_height=\"60dp\"\n        android:hint=\"Farm Pass code\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.75\"\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\n\n        <com.google.android.material.textfield.TextInputEditText\n            android:id=\"@+id/editTextJoinFarmPasscode\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:inputType=\"textEmailAddress\"\n\n            android:maxLength=\"30\"\n            android:maxLines=\"1\"\n            android:textAlignment=\"center\"\n            android:textSize=\"20sp\" />\n    </com.google.android.material.textfield.TextInputLayout>\n\n    <ProgressBar\n        android:id=\"@+id/progressIconJoinFarm\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.498\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonJoinFarm\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Join Farm\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.75\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.9\" />\n\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonOpenCreateFarmActivity\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Create Farm\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.25\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.9\" />\n\n    <TextView\n        android:id=\"@+id/joinFarmErrorMessage\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textColor=\"#FF0000\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.82\" />\n\n    <ImageView\n        android:id=\"@+id/imageView2\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"200dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.216\"\n        app:srcCompat=\"@drawable/ic_tractor_logo\" />\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_join_farm.xml b/app/src/main/res/layout/activity_join_farm.xml
--- a/app/src/main/res/layout/activity_join_farm.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/app/src/main/res/layout/activity_join_farm.xml	(date 1651088025922)
@@ -86,7 +86,7 @@
         android:text="Join Farm"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.75"
+        app:layout_constraintHorizontal_bias="0.8"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.9" />
@@ -99,7 +99,7 @@
         android:text="Create Farm"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.25"
+        app:layout_constraintHorizontal_bias="0.2"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintVertical_bias="0.9" />
Index: app/src/main/java/com/example/farmmanagerhelper/DatabaseManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.farmmanagerhelper;\n\nimport android.content.Context;\nimport android.util.Log;\nimport android.widget.Spinner;\n\nimport androidx.annotation.NonNull;\n\nimport com.example.farmmanagerhelper.models.Customer;\nimport com.example.farmmanagerhelper.models.Farm;\nimport com.example.farmmanagerhelper.models.Order;\nimport com.example.farmmanagerhelper.models.ProduceEstimatorProfile;\nimport com.example.farmmanagerhelper.models.Product;\nimport com.example.farmmanagerhelper.models.ShippingCalculatorProfile;\nimport com.example.farmmanagerhelper.models.TimetableTask;\nimport com.example.farmmanagerhelper.models.User;\nimport com.google.android.gms.tasks.OnSuccessListener;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class DatabaseManager {\n    //Firebase\n    private FirebaseAuth mAuth;\n    private FirebaseDatabase database = FirebaseDatabase.getInstance();\n    private DatabaseReference dbRef = database.getReference();\n\n    // other variables\n    String stringIndicatingUserIsNotInFarm = \"none\";\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    // functions in this section are used to get database references\n\n    public static DatabaseReference getDatabaseReference()\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        //database.setPersistenceEnabled(true);\n        DatabaseReference dbRef = database.getReference();\n\n        return dbRef;\n    }\n\n    public static DatabaseReference getUsersTableDatabaseReference(String userId)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        //database.setPersistenceEnabled(true);\n        DatabaseReference dbRef = database.getReference().child(\"users\").child(userId);\n\n        return dbRef;\n    }\n\n    public static DatabaseReference getFarmDatabaseReferenceByName(String farmName)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        //database.setPersistenceEnabled(true);\n        DatabaseReference dbRef = database.getReference().child(\"farm_table\").child(farmName);\n\n        return dbRef;\n    }\n\n    // checks the user id is in the database and checks if the user id is in a farm. returns true\n    // if it is and false if not\n    public static DatabaseReference getDatabaseRefForUserId(FirebaseUser firebaseUser)\n    {\n\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference().child(\"users\").child(firebaseUser.getUid());\n\n        return dbRef;\n\n    }\n\n    public static DatabaseReference getUsersInFarmDocumentByFarmName(String farmName) {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference().child(\"farm_table\").child(farmName).child(\"usersInFarm\");\n\n        return dbRef;\n\n    }\n\n    public static DatabaseReference getDatabaseRefForFarmName(String farmNameFromInput)\n    {\n\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference().child(\"farm_table\").child(farmNameFromInput);\n        return dbRef;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    // functions in this section are to do with the user functionality\n\n    public static boolean addUserToDatabase(User user)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n        // add user object to the table making the user ID the childnode/ primary key\n        dbRef.child(\"users\").child(user.userId).setValue(user);\n\n        return true;\n    }\n\n    // adds new farm to database. the adds the user to the farm list and adds the farm name to the\n    // user\n    public static boolean addFarmToDatabase(Farm farm)\n    {\n        Log.d(\"DatabaseManager adding farm to db :\", farm.farmName);\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n        // add user object to the table making the user ID the child node/ primary key\n        dbRef.child(\"farm_table\").child(farm.farmName).setValue(farm);\n        Log.d(\"Database access: \",\" Created new farm table\" );\n\n        // might need to search for the farm, and thn add the user in farm to the list\n        // as a new child node\n        dbRef.child(\"farm_table\").child(farm.farmName).child(\"usersInFarm\").child(farm.managerID).setValue(farm.managerID);\n\n        // add farm to user\n        //\n        AddFarmNameToUserAndUserToFarm(farm.farmName,farm.managerID);\n\n        return true;\n    }\n\n    public static void AddFarmNameToUserAndUserToFarm(String farmName, String userID)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n        dbRef.child(\"users\").child(userID).child(\"UserTableFarmId\").setValue(farmName);\n\n        // get the users name and add it as the value for the node id\n        dbRef.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                String firstName = snapshot.child(\"users\").child(userID).child(\"firstName\").getValue().toString();\n                String lastName = snapshot.child(\"users\").child(userID).child(\"lastName\").getValue().toString();\n                String fullName = firstName + \" \" + lastName;\n\n                dbRef.child(\"farm_table\").child(farmName).child(\"usersInFarm\").child(userID);\n                dbRef.child(\"farm_table\").child(farmName).child(\"usersInFarm\").child(userID).child(\"name\").setValue(fullName);\n                dbRef.child(\"farm_table\").child(farmName).child(\"usersInFarm\").child(userID).child(\"currentlyInFarm\").setValue(true);\n\n                Log.d(\"DatabaseManager AddFarmNameToUserAndUserToFarm\",fullName + \" added to farm\");\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n                Log.d(\"DatabaseManager AddFarmNameToUserAndUserToFarm\",\"Error adding user to farm\");\n\n            }\n        });\n\n    }\n\n    // example of how to use this\n    // DatabaseManager.removeFarmNameFromUserAndUserFromFarm(farm.farmName,firebaseUser.getUid());\n    public static void removeFarmNameFromUserAndUserFromFarm(String farmName, String userID)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n\n        dbRef.child(\"farm_table\").child(farmName).child(\"usersInFarm\").child(userID).removeValue();\n        dbRef.child(\"users\").child(userID).child(\"UserTableFarmId\").setValue(\"none\");\n        Log.d(\"Database access: \",\" Removed user: \" +userID+ \" from farm : \"+ farmName );\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    // functions in this section are to do with the Timetable functionality\n\n    public static void AddNewTaskToUserInFarmTimeTable(String userId, String farmId, TimetableTask task) {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n        // add new task to the user in usersInFarm giving the unique key as the identifier\n        //\n        dbRef.child(\"farm_table\").child(farmId).child(\"usersInFarm\").child(userId).child(\"timetable\").child(task.getTaskID()).setValue(task);\n        Log.d(\"Database write: \",\"New task added to \" +userId+ \" from farm : \"+ farmId );\n\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    // functions in this section are to do with the orders board functionality\n\n\n    public static void addNewCustomerToFarmTable(Customer customer, String farmId) {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n        dbRef.child(\"farm_table\").child(farmId).child(\"customers\").child(customer.getCustomerName()).setValue(customer);\n\n        Log.d(\"Database write: \",\"New customer \" + customer.getCustomerName()+ \" from farm : \"+ farmId );\n\n    }\n\n    public static DatabaseReference getCustomerTableDatabaseReferenceByFarmName(String farmName)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        //database.setPersistenceEnabled(true);\n        DatabaseReference dbRef = database.getReference().child(\"farm_table\").child(farmName).child(\"customers\");\n\n        return dbRef;\n    }\n\n    public static void addNewProductToCustomerTable(Product product, String farmId) {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        DatabaseReference dbRef = database.getReference();\n\n        dbRef.child(\"farm_table\").child(farmId).child(\"customers\").child(product.getCustomerItBelongsTo())\n                .child(product.getProductName()).setValue(product);\n\n        Log.d(\"Database write: \",\"New customer \" + product.getProductName()+ \" from farm : \"+ farmId );\n    }\n\n    // takes the farm database reference and adds the order to the customer\n    //\n    public static void addOrderToCustomer(Order order, String farmId, DatabaseReference dbFarmRef) {\n\n        dbFarmRef.child(\"customers\").child(order.getCustomer()).child(order.getProduct()).child(\"orders\").child(order.getOrderID()).setValue(order);\n\n        Log.d(\"Database write addOrderToCustomer\",\"New order \" + order.getOrderID() + \" from farm : \"+ farmId );\n\n    }\n\n    // deletes the previous order and writes the new order in its place. It uses a an on success listener\n    // to wait for the delete and then rewrite the new order with the same id\n    //\n    public static void replaceOrderForCustomer(Order order, String farmId, DatabaseReference dbFarmRef) {\n\n        dbFarmRef.child(\"customers\").child(order.getCustomer()).child(order.getProduct()).child(\"orders\")\n                .child(order.getOrderID()).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n                dbFarmRef.child(\"customers\").child(order.getCustomer()).child(order.getProduct()).child(\"orders\").child(order.getOrderID()).setValue(order);\n                Log.d(\"Database write addOrderToCustomer\",\"Updating \" + order.getOrderID() + \" in farm : \"+ farmId );\n            }\n        });\n    }\n\n\n    // Takes a farm reference and navigates to customer and removes the order provided\n    //\n    public static void deleteOrderForCustomer(Order order, String farmId, DatabaseReference dbFarmRef) {\n        dbFarmRef.child(\"customers\").child(order.getCustomer()).child(order.getProduct()).child(\"orders\")\n                .child(order.getOrderID()).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n                Log.d(\"Database write deleteOrderForCustomer\",\"Deleted \" + order.getOrderID() + \" in farm \"+ farmId +\" successfully.\");\n            }\n        });\n    }\n\n\n    // Takes a database reference and of the customer table for the farm and an Object. It navigates down to the\n    // the object and and sets the value of orderComplete in the database to correspond with the Order object\n    //\n    public static void changeOrderCompleteStatusValue(DatabaseReference dbCustomerRef, Order order) {\n        dbCustomerRef.child(order.getCustomer()).child(order.getProduct()).child(\"orders\").child(order.getOrderID()).child(\"orderComplete\")\n                .setValue(order.isOrderComplete()).addOnSuccessListener(new OnSuccessListener<Void>() {\n        @Override\n        public void onSuccess(Void aVoid) {\n            Log.d(\"Database write deleteOrderForCustomer\",\"Updated \" + order.getOrderID() + \" to \" + order.isOrderComplete());\n        }\n    });\n    }\n\n    public static void deleteCustomerFromFarm(DatabaseReference dbCustRef, String customer) {\n        dbCustRef.child(customer).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n\n                Log.d(\"Database write deleteCustomerFromFarm\",\"Delete Successful\" );\n            }\n        });\n    }\n\n    public static void deleteProductFromCustomer(DatabaseReference dbCustRef, String product, String customer) {\n        dbCustRef.child(customer).child(product).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n\n                Log.d(\"Database write deleteProductFromCustomer\",\"Delete Successful\" );\n            }\n        });\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    // functions in this section are to do with the Shipping calculator functionality\n    public static DatabaseReference getShippingCalcProfilesTableDatabaseReferenceByFarmName(String farmName)\n    {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        //database.setPersistenceEnabled(true);\n        DatabaseReference dbRef = database.getReference().child(\"farm_table\").child(farmName).child(\"shippingCalculatorProfiles\");\n\n        return dbRef;\n    }\n\n    public static void addNewShippingCalcProfileToDatabase(ShippingCalculatorProfile profile, DatabaseReference dbShippingCalcRef) {\n\n        dbShippingCalcRef.child(profile.getProfileName()).setValue(profile).addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n\n                Log.d(\"Database write addNewShippingCalcProfileToDatabase\",\" Adding new profile Successful\" );\n            }\n        });\n    }\n\n    public static void updateShippingCalcProfileInDatabase(ShippingCalculatorProfile profile, DatabaseReference dbShippingCalcRef, Map<String, Object> postValues) {\n\n        dbShippingCalcRef.child(profile.getProfileName()).updateChildren(postValues).addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n                Log.d(\"Database write updateShippingCalcProfileInDatabase\",\" Update to profile Successful\" );\n            }\n        });\n\n    }\n\n    public static void deleteShippingCalcProfileFromDatabase(String profileName, DatabaseReference dbShippingCalcRef) {\n        dbShippingCalcRef.child(profileName).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n                Log.d(\"Database write deleteShippingCalcProfileFromDatabase\",\" Profile delete Successful\" );\n            }\n        });\n    }\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////\n    // functions in this section are to do with the ProduceEstimator functionality\n\n    public static DatabaseReference getProduceEstimatorProfilesTableDatabaseReferenceByFarmName(String farmId) {\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\n        //database.setPersistenceEnabled(true);\n        DatabaseReference dbRef = database.getReference().child(\"farm_table\").child(farmId).child(\"ProduceEstimatorProfiles\");\n\n        return dbRef;\n    }\n\n    public static void addNewProduceEstimatorProfileToDatabase(ProduceEstimatorProfile profile, DatabaseReference dbShippingCalcRef) {\n        dbShippingCalcRef.child(profile.getProfileName()).setValue(profile).addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n\n                Log.d(\"Database write addNewShippingCalcProfileToDatabase\",\" Adding new profile Successful\" );\n            }\n        });\n    }\n\n    public static void updateProduceEstimatorProfileInDatabase(ProduceEstimatorProfile newProfile, DatabaseReference dbProduceEstimatorRef, Map<String, Object> postValues) {\n        dbProduceEstimatorRef.child(newProfile.getProfileName()).updateChildren(postValues).addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n                Log.d(\"Database write updateProduceEstimatorProfileInDatabase\",\" Update to profile Successful\" );\n            }\n        });\n    }\n\n    public static void deleteProduceEstimatorFromDatabase(String profileName, DatabaseReference dbShippingCalcRef) {\n        dbShippingCalcRef.child(profileName).removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n                Log.d(\"Database write deleteShippingCalcProfileFromDatabase\",\" Profile delete Successful\" );\n            }\n        });\n    }\n\n\n    public static void setFarmInUserToNone(DatabaseReference dbUsersRef) {\n        dbUsersRef.child(\"UserTableFarmId\").setValue(\"none\").addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n\n                Log.d(\"Database write setFarmInUserToNone\",\"Reset users farm back to none\" );\n            }\n        });\n    }\n\n    public static void setCurrentlyInFarmToFalseForUser(DatabaseReference dbUsersInFarmRef, String uid) {\n        dbUsersInFarmRef.child(uid).child(\"currentlyInFarm\").setValue(\"false\").addOnSuccessListener(new OnSuccessListener<Void>() {\n            @Override\n            public void onSuccess(Void aVoid) {\n\n                Log.d(\"Database write setCurrentlyInFarmToFalseForUser\",\"set currentlyInFarm to false for \" + uid );\n            }\n        });\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/farmmanagerhelper/DatabaseManager.java b/app/src/main/java/com/example/farmmanagerhelper/DatabaseManager.java
--- a/app/src/main/java/com/example/farmmanagerhelper/DatabaseManager.java	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/app/src/main/java/com/example/farmmanagerhelper/DatabaseManager.java	(date 1651270363131)
@@ -1,8 +1,6 @@
 package com.example.farmmanagerhelper;
 
-import android.content.Context;
 import android.util.Log;
-import android.widget.Spinner;
 
 import androidx.annotation.NonNull;
 
@@ -23,7 +21,6 @@
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
 
-import java.util.HashMap;
 import java.util.Map;
 
 public class DatabaseManager {
@@ -115,16 +112,11 @@
         FirebaseDatabase database = FirebaseDatabase.getInstance();
         DatabaseReference dbRef = database.getReference();
 
-        // add user object to the table making the user ID the child node/ primary key
         dbRef.child("farm_table").child(farm.farmName).setValue(farm);
         Log.d("Database access: "," Created new farm table" );
 
-        // might need to search for the farm, and thn add the user in farm to the list
-        // as a new child node
         dbRef.child("farm_table").child(farm.farmName).child("usersInFarm").child(farm.managerID).setValue(farm.managerID);
 
-        // add farm to user
-        //
         AddFarmNameToUserAndUserToFarm(farm.farmName,farm.managerID);
 
         return true;
@@ -155,10 +147,8 @@
             @Override
             public void onCancelled(@NonNull DatabaseError error) {
                 Log.d("DatabaseManager AddFarmNameToUserAndUserToFarm","Error adding user to farm");
-
             }
         });
-
     }
 
     // example of how to use this
Index: app/src/main/java/com/example/farmmanagerhelper/ManagerOrderBoardSettings.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.farmmanagerhelper;\n\nimport android.app.DatePickerDialog;\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.AdapterView;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.DatePicker;\nimport android.widget.EditText;\nimport android.widget.ImageButton;\nimport android.widget.RadioButton;\nimport android.widget.Spinner;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.example.farmmanagerhelper.models.Customer;\nimport com.example.farmmanagerhelper.models.Order;\nimport com.example.farmmanagerhelper.models.Product;\n\nimport java.util.Calendar;\n\npublic class ManagerOrderBoardSettings extends AppCompatActivity {\n\n    final Calendar myCalendar = Calendar.getInstance();\n    Context context = this;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_manager_order_board_settings);\n\n        // main form UI components\n        //\n        EditText formEditTextDatePicker = findViewById(R.id.EditTextManagerOrderBoardSettingsDatePicker);\n        Spinner formSpinnerCustomers = findViewById(R.id.spinnerManagerOrderBoardSettingsCustomer);\n        Spinner formSpinnerProducts = findViewById(R.id.SpinnerManagerOrderBoardSettingsProduct);\n        EditText formEditTextProductQuantity = findViewById(R.id.editTextProductQuantity);\n        Button buttonAddNewOrder =  findViewById(R.id.buttonManagerOrderSettingsAddNewOrder);\n        Button buttonAddNewCustomer = findViewById(R.id.buttonManagerOrderSettingsAddNewCustomerWindow);\n        Button buttonAddNewProduct = findViewById(R.id.buttonManagerOrderSettingsAddNewProduct);\n        Button buttonOpenDeleteCustomerOrProducts = findViewById(R.id.buttonManagerOrderSettingsOpeneDeleteCustomerOrProductPopup);\n        TextView formErrorMsg = findViewById(R.id.formErrorMsg);\n\n        //Add customer UI components\n        //\n        View viewAddNewCustomerDialog = findViewById(R.id.AddNewCustomerDialog);\n        ImageButton imageButtonCloseNewCustomerWindow = findViewById(R.id.imageButtonCloseNewCustomerWindow);\n        EditText EditTextAddNewCustomerName = findViewById(R.id.EditTextNewCustomerName);\n        Button buttonManagerOrderSettingsAddNewCustomerToDatabase = findViewById(R.id.buttonManagerOrderSettingsAddNewCustomerToDatabase);\n        TextView textViewAddCustomerErrorMsg = findViewById(R.id.managerOrderBoardAddCustomerErrorMsg);\n\n        //Add Product to customer UI components\n        //\n        View viewAddNewProductDialog = findViewById(R.id.AddNewProductDialog);\n        ImageButton imageButtonCloseNewProductWindow = findViewById(R.id.imageButtonCloseNewProductWindow);\n        Spinner spinnerAddProductCustomerName = findViewById(R.id.spinnerAddProductCustomerName);\n        EditText EditTextAddNewProductName = findViewById(R.id.EditTextNewProductName);\n        Button buttonManagerOrderSettingsAddNewProductToDatabase = findViewById(R.id.buttonManagerOrderSettingsAddNewProductToDatabase);\n        TextView textViewAddProductErrorMsg = findViewById(R.id.managerOrderBoardAddProductErrorMsg);\n\n        // Delete customer or Product UI components\n        View viewDeleteCustomerOrProducts = findViewById(R.id.removeCustomerOrProductPopUp);\n        ImageButton imageButtonCloseDeleteCustomerOrProducts = findViewById(R.id.imageButtonCloseDeleteCustomerOrProductPopUp);\n        Button buttonDeleteCustomerOrProductsFromDatabase = findViewById(R.id.buttonManagerOrderSettingsDeleteCustomerOrProduct);\n        Spinner spinnerDeleteCustomer = findViewById(R.id.spinnerDeleteCustomer);\n        Spinner spinnerDeleteProduct = findViewById(R.id.spinnerDeleteProduct);\n        TextView textViewDeleteCustomerOrProductsErrorMsg = findViewById(R.id.managerOrderBoardDeleteCustomerOrProductErrorMsg);\n        RadioButton radioDeleteCustomer = findViewById(R.id.radio_DeleteCustomer);\n        RadioButton radioDeleteProduct = findViewById(R.id.radio_DeleteProduct);\n        RadioButton radioDeleteConfirm = findViewById(R.id.radio_DeleteConfirm);\n\n        // set up the dialog box to give dates in dd/MM/yy\n        //\n        DatePickerDialog.OnDateSetListener date = new DatePickerDialog.OnDateSetListener() {\n            @Override\n            public void onDateSet(DatePicker datePicker, int year, int month, int day) {\n                myCalendar.set(Calendar.YEAR, year);\n                myCalendar.set(Calendar.MONTH, month);\n                myCalendar.set(Calendar.DAY_OF_MONTH, day);\n\n                // update editTextDatePicker to show new date\n                //\n                TimetableServices.updateLabel(formEditTextDatePicker, myCalendar);\n            }\n        };\n\n        // set on click listener for calender popup.\n        //\n        formEditTextDatePicker.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                new DatePickerDialog(ManagerOrderBoardSettings.this, date ,\n                        myCalendar.get(Calendar.YEAR),myCalendar.get(Calendar.MONTH),\n                        myCalendar.get(Calendar.DAY_OF_MONTH)).show();\n            }\n        });\n\n        // set up spinners to act as dropdown lists\n        //\n        ArrayAdapter<CharSequence> spinnerAdapter = ArrayAdapter.createFromResource(this,\n                R.array.blank_array, android.R.layout.simple_spinner_item);\n\n        // set the spinner to drop down and add the list of times to it\n        //\n        spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n        formSpinnerCustomers.setAdapter(spinnerAdapter);\n        formSpinnerProducts.setAdapter(spinnerAdapter);\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // The functionality below is used to add a validate and add a new order to the database.\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // Onclick listener for add new order button. Validates inputs\n        //\n        buttonAddNewOrder.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                boolean isValid = true;\n\n                Log.d(\"ManagerOrderBoardSettings validation :\",\"Beginning\");\n                while(isValid) {\n                    isValid = GeneralServices.checkEditTextIsNotNull(formEditTextDatePicker.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"Date Picker is null\");\n                        formErrorMsg.setText(\"Date must not be null. This is a system error.\");\n                        break;\n                    }\n                    formErrorMsg.setText(\"\");\n\n                    isValid = GeneralServices.checkIfSpinnerIsNull(formSpinnerCustomers);\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"No customers selected\");\n                        formErrorMsg.setText(\"You must add a customer. Click Add New Customer button below\");\n                        break;\n                    }\n                    formErrorMsg.setText(\"\");\n\n                    isValid = GeneralServices.checkIfSpinnerIsNull(formSpinnerProducts);\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"No products selected\");\n                        formErrorMsg.setText(\"You must add a Product for \" + formSpinnerCustomers.getSelectedItem()+\n                                \". Click Add New Product button below\");\n                        break;\n                    }\n                    formErrorMsg.setText(\"\");\n\n                    isValid = GeneralServices.checkEditTextIsNotNull(formEditTextProductQuantity.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"No quantity selected\");\n                        formErrorMsg.setText(\"Enter a quantity\");\n                        break;\n                    }\n                    formErrorMsg.setText(\"\");\n\n                    isValid = GeneralServices.checkStringDoesNotContainForwardSlashCharacter(formEditTextProductQuantity.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"Forward slash found in string\");\n                        formErrorMsg.setText(\"Can not use \\\" / \\\" in inputs\");\n                        break;\n                    }\n                    formErrorMsg.setText(\"\");\n\n                    if(isValid)\n                    {\n                        Order order = new Order(null, formEditTextDatePicker.getText().toString(),\n                                formSpinnerCustomers.getSelectedItem().toString(), formSpinnerProducts.getSelectedItem().toString(),\n                                formEditTextProductQuantity.getText().toString(), false);\n\n                        if(order.getQuantity().equals(\"0\"))\n                        {\n                            // delete order\n                            //\n                            OrdersBoardServices.deleteOrder(order,context);\n                        }\n                        else\n                        {\n                            OrdersBoardServices.AddOrder(order,context);\n                        }\n\n                        // reset the quantity value and product spinner\n                        //\n                        formEditTextProductQuantity.setText(\"\");\n                        formSpinnerProducts.setSelection(0);\n                        formErrorMsg.setText(\"\");\n                        break;\n                    }\n\n                }\n            }\n        });\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // The functionality below is used to add a validate and add a new Customer to the database.\n        // It also manages the pop up window, disable the form below and re enabling features when finished.\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // Listeners for adding new customer window\n        // This listener disables inputs on all other editTexts and dropdowns and makes the view\n        // to add new customers visible.\n        //\n        buttonAddNewCustomer.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                // disable components for adding item\n                //\n                buttonAddNewOrder.setVisibility(View.GONE);\n                buttonAddNewCustomer.setVisibility((View.GONE));\n                buttonAddNewProduct.setVisibility((View.GONE));\n                formEditTextDatePicker.setEnabled(false);\n                formSpinnerCustomers.setEnabled(false);\n                formSpinnerProducts.setEnabled(false);\n                formEditTextProductQuantity.setEnabled(false);\n\n                //enable components for\n                //\n                viewAddNewCustomerDialog.setVisibility(View.VISIBLE);\n                viewAddNewCustomerDialog.setElevation(10);\n                EditTextAddNewCustomerName.setVisibility(View.VISIBLE);\n                textViewAddCustomerErrorMsg.setVisibility(View.VISIBLE);\n                buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n\n            }\n        });\n\n        imageButtonCloseNewCustomerWindow.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                //enable components for adding new customer\n                //\n                viewAddNewCustomerDialog.setVisibility(View.GONE);\n                viewAddNewCustomerDialog.setElevation(-2);\n                EditTextAddNewCustomerName.setVisibility(View.GONE);\n                textViewAddCustomerErrorMsg.setVisibility(View.GONE);\n\n                // enable components for adding item\n                //\n                buttonAddNewOrder.setVisibility(View.VISIBLE);\n                buttonAddNewCustomer.setVisibility((View.VISIBLE));\n                buttonAddNewProduct.setVisibility((View.VISIBLE));\n                buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n                formEditTextDatePicker.setEnabled(true);\n                formSpinnerCustomers.setEnabled(true);\n                formSpinnerProducts.setEnabled(true);\n                formEditTextProductQuantity.setEnabled(true);\n\n                // reset customer name field\n                //\n                EditTextAddNewCustomerName.setText(\"\");\n            }\n        });\n\n        buttonManagerOrderSettingsAddNewCustomerToDatabase.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                Customer customer = null;\n                boolean isValid = true;\n\n                Log.d(\"ManagerOrderBoardSettings validation :\",\"Beginning\");\n\n                while(isValid) {\n                    isValid = GeneralServices.checkEditTextIsNotNull(EditTextAddNewCustomerName.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"empty inputs\");\n                        textViewAddCustomerErrorMsg.setText(\"Input a Customer Name.\");\n                        break;\n                    }\n                    textViewAddCustomerErrorMsg.setText(\"\");\n\n                    isValid = GeneralServices.checkStringDoesNotContainForwardSlashCharacter(EditTextAddNewCustomerName.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"Forward slash found in string\");\n                        textViewAddCustomerErrorMsg.setText(\"Can not use \\\" / \\\" in inputs\");\n                        break;\n                    }\n                    textViewAddCustomerErrorMsg.setText(\"\");\n\n                    if(isValid)\n                    {\n\n                        customer = new Customer(EditTextAddNewCustomerName.getText().toString());\n\n                        // add customer and update the 3 customer spinners after the database write\n                        //\n                        OrdersBoardServices.addCustomerToFarm(context, customer,formSpinnerCustomers,spinnerAddProductCustomerName,spinnerDeleteCustomer);\n\n                        //enable components for adding new customer\n                        //\n                        viewAddNewCustomerDialog.setVisibility(View.GONE);\n                        viewAddNewCustomerDialog.setElevation(-2);\n                        EditTextAddNewCustomerName.setVisibility(View.GONE);\n                        textViewAddCustomerErrorMsg.setVisibility(View.GONE);\n\n                        // disable components for adding item\n                        //\n                        buttonAddNewOrder.setVisibility(View.VISIBLE);\n                        buttonAddNewCustomer.setVisibility((View.VISIBLE));\n                        buttonAddNewProduct.setVisibility((View.VISIBLE));\n                        buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n                        formEditTextDatePicker.setEnabled(true);\n                        formSpinnerCustomers.setEnabled(true);\n                        formSpinnerProducts.setEnabled(true);\n                        formEditTextProductQuantity.setEnabled(true);\n\n                        // reset customer name field\n                        //\n                        EditTextAddNewCustomerName.setText(\"\");\n\n                        break;\n                    }\n                }\n            }\n        });\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // The functionality below is used to add an new Product to customer in the database.\n        // It also manages the pop up window, disable the form below and re enabling features when finished.\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n        // Buttons to open/close the add product to customer dialog\n        //\n        buttonAddNewProduct.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                // disable components for adding item\n                //\n                buttonAddNewOrder.setVisibility(View.GONE);\n                buttonAddNewCustomer.setVisibility((View.GONE));\n                buttonAddNewProduct.setVisibility((View.GONE));\n                buttonOpenDeleteCustomerOrProducts.setVisibility((View.GONE));\n                formEditTextDatePicker.setEnabled(false);\n                formSpinnerCustomers.setEnabled(false);\n                formSpinnerProducts.setEnabled(false);\n                formEditTextProductQuantity.setEnabled(false);\n\n                //enable components for\n                //\n                viewAddNewProductDialog.setVisibility(View.VISIBLE);\n                viewAddNewProductDialog.setElevation(10);\n                spinnerAddProductCustomerName.setVisibility(View.VISIBLE);\n                EditTextAddNewProductName.setVisibility(View.VISIBLE);\n                textViewAddProductErrorMsg.setVisibility(View.VISIBLE);\n            }\n        });\n\n        imageButtonCloseNewProductWindow.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                //enable components for adding new customer\n                //\n                viewAddNewProductDialog.setVisibility(View.GONE);\n                viewAddNewProductDialog.setElevation(-2);\n                spinnerAddProductCustomerName.setVisibility(View.GONE);\n                EditTextAddNewProductName.setVisibility(View.GONE);\n                textViewAddProductErrorMsg.setVisibility(View.GONE);\n\n                // disable components for adding item\n                //\n                buttonAddNewOrder.setVisibility(View.VISIBLE);\n                buttonAddNewCustomer.setVisibility((View.VISIBLE));\n                buttonAddNewProduct.setVisibility((View.VISIBLE));\n                buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n                formEditTextDatePicker.setEnabled(true);\n                formSpinnerCustomers.setEnabled(true);\n                formSpinnerProducts.setEnabled(true);\n                formEditTextProductQuantity.setEnabled(true);\n\n                // reset Product name field\n                //\n                EditTextAddNewProductName.setText(\"\");\n            }\n        });\n\n        // Validate inputs and add anew product to the selected customer.\n        //\n        buttonManagerOrderSettingsAddNewProductToDatabase.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                // add Product to customer\n                //\n                Boolean isValid = true;\n\n                Log.d(\"ManagerOrderBoardSettings validation :\",\"Beginning\");\n\n                while(isValid) {\n\n                    isValid = GeneralServices.checkIfSpinnerIsNull(spinnerAddProductCustomerName);\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"No customers found\");\n                        textViewAddProductErrorMsg.setText(\"You must first add customers before you can add a product.\");\n                        break;\n                    }\n                    textViewAddProductErrorMsg.setText(\"\");\n\n\n                    isValid = GeneralServices.checkEditTextIsNotNull(EditTextAddNewProductName.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"empty inputs\");\n                        textViewAddProductErrorMsg.setText(\"Input a Customer Name.\");\n                        break;\n                    }\n                    textViewAddProductErrorMsg.setText(\"\");\n\n                    isValid = GeneralServices.checkStringDoesNotContainForwardSlashCharacter(EditTextAddNewProductName.getText().toString());\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"Forward slash found in string\");\n                        textViewAddProductErrorMsg.setText(\"Can not use \\\" / \\\" in inputs\");\n                        break;\n                    }\n                    textViewAddProductErrorMsg.setText(\"\");\n\n                    if(isValid)\n                    {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"adding product\");\n\n                        Product product = new Product(EditTextAddNewProductName.getText().toString(),\n                                spinnerAddProductCustomerName.getSelectedItem().toString(),\n                                null);\n\n                        // add customer and update dropdown list\n                        //\n                        OrdersBoardServices.addNewProductToCustomers(product, context, formSpinnerProducts,spinnerDeleteProduct);\n\n                        //enable components for adding new customer\n                        //\n                        viewAddNewProductDialog.setVisibility(View.GONE);\n                        viewAddNewProductDialog.setElevation(-2);\n                        spinnerAddProductCustomerName.setVisibility(View.GONE);\n                        EditTextAddNewProductName.setVisibility(View.GONE);\n                        textViewAddProductErrorMsg.setVisibility(View.GONE);\n\n                        // disable components for adding item\n                        //\n                        buttonAddNewOrder.setVisibility(View.VISIBLE);\n                        buttonAddNewCustomer.setVisibility((View.VISIBLE));\n                        buttonAddNewProduct.setVisibility((View.VISIBLE));\n                        buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n                        formEditTextDatePicker.setEnabled(true);\n                        formSpinnerCustomers.setEnabled(true);\n                        formSpinnerProducts.setEnabled(true);\n                        formEditTextProductQuantity.setEnabled(true);\n\n                        // reset customer name field\n                        EditTextAddNewProductName.setText(\"\");\n\n                        break;\n                    }\n                }\n            }\n        });\n\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // The functionality below is used to delete an order or customer from the database.\n        // It also manages the pop up window, disable the form below and re enabling features when finished.\n        // Special care is taken to disable the delete button when not open and to disable to \"Confirm Delete\" radio.\n\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        buttonOpenDeleteCustomerOrProducts.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                // disable components for adding item\n                //\n                buttonAddNewOrder.setVisibility(View.GONE);\n                buttonAddNewCustomer.setVisibility((View.GONE));\n                buttonAddNewProduct.setVisibility((View.GONE));\n                buttonOpenDeleteCustomerOrProducts.setVisibility((View.GONE));\n                formEditTextDatePicker.setEnabled(false);\n                formSpinnerCustomers.setEnabled(false);\n                formSpinnerProducts.setEnabled(false);\n                formEditTextProductQuantity.setEnabled(false);\n\n                viewDeleteCustomerOrProducts.setVisibility(View.VISIBLE);\n                viewDeleteCustomerOrProducts.setElevation(10);\n                imageButtonCloseDeleteCustomerOrProducts.setVisibility(View.VISIBLE);\n                buttonDeleteCustomerOrProductsFromDatabase.setVisibility(View.VISIBLE);\n                spinnerDeleteCustomer.setVisibility(View.VISIBLE);\n                textViewDeleteCustomerOrProductsErrorMsg.setVisibility(View.VISIBLE);\n                buttonDeleteCustomerOrProductsFromDatabase.setEnabled(true);\n                radioDeleteCustomer.setChecked(true);\n                radioDeleteConfirm.setChecked(false);\n\n                OrdersBoardServices.UpdateSpinnerWithCustomerNames(spinnerDeleteCustomer, context);\n            }\n        });\n\n        // radio buttons to update and make visible the product for that customer.\n        //\n        radioDeleteProduct.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                spinnerDeleteProduct.setVisibility(View.VISIBLE);\n                OrdersBoardServices.UpdateSpinnerWithProductNames(spinnerDeleteCustomer.getSelectedItem().toString(), context,spinnerDeleteProduct);\n\n            }\n        });\n\n        radioDeleteCustomer.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                spinnerDeleteProduct.setVisibility(View.GONE);\n            }\n        });\n\n        // update the Delete Products to match the Deleted customer selected\n        //\n        spinnerDeleteCustomer.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n            @Override\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\n                OrdersBoardServices.UpdateSpinnerWithProductNames(spinnerDeleteCustomer.getSelectedItem().toString(), context,spinnerDeleteProduct);\n            }\n\n            @Override\n            public void onNothingSelected(AdapterView<?> adapterView) {\n\n            }\n        });\n\n        imageButtonCloseDeleteCustomerOrProducts.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                viewDeleteCustomerOrProducts.setVisibility(View.GONE);\n                viewDeleteCustomerOrProducts.setElevation(10);\n                imageButtonCloseDeleteCustomerOrProducts.setVisibility(View.GONE);\n                buttonDeleteCustomerOrProductsFromDatabase.setVisibility(View.GONE);\n                spinnerDeleteCustomer.setVisibility(View.GONE);\n                spinnerDeleteProduct.setVisibility(View.GONE);\n                textViewDeleteCustomerOrProductsErrorMsg.setVisibility(View.GONE);\n                buttonDeleteCustomerOrProductsFromDatabase.setEnabled(false);\n                radioDeleteConfirm.setChecked(false);\n                radioDeleteCustomer.setChecked(true);\n                radioDeleteProduct.setChecked(false);\n\n                // enable components for adding item\n                //\n                buttonAddNewOrder.setVisibility(View.VISIBLE);\n                buttonAddNewCustomer.setVisibility((View.VISIBLE));\n                buttonAddNewProduct.setVisibility((View.VISIBLE));\n                buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n                formEditTextDatePicker.setEnabled(true);\n                formSpinnerCustomers.setEnabled(true);\n                formSpinnerProducts.setEnabled(true);\n                formEditTextProductQuantity.setEnabled(true);\n            }\n        });\n\n        buttonDeleteCustomerOrProductsFromDatabase.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                boolean isValid = true;\n\n                Log.d(\"ManagerOrderBoardSettings validation :\", \"Beginning\");\n                while (isValid) {\n\n                    isValid = GeneralServices.checkIfSpinnerIsNull(spinnerDeleteCustomer);\n                    if (!isValid) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"No customer selected\");\n                        textViewDeleteCustomerOrProductsErrorMsg.setText(\"You must add a customer to delete one.\");\n                        break;\n                    }\n                    textViewDeleteCustomerOrProductsErrorMsg.setText(\"\");\n\n\n                    // If the delete product is selected, check that it is not null\n                    //\n                    if(radioDeleteProduct.isChecked())\n                    {\n                        isValid = GeneralServices.checkIfSpinnerIsNull(spinnerDeleteProduct);\n                        if (!isValid) {\n                            Log.d(\"ManagerOrderBoardSettings validation :\", \"No product selected\");\n                            textViewDeleteCustomerOrProductsErrorMsg.setText(\"You must add a product to delete one.\");\n                            break;\n                        }\n                        textViewDeleteCustomerOrProductsErrorMsg.setText(\"\");\n                    }\n\n                    if (!radioDeleteCustomer.isChecked() && !radioDeleteProduct.isChecked()) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"Product and Customer radio buttons are selected at the same time\");\n                        textViewDeleteCustomerOrProductsErrorMsg.setText(\"Product and Customer radio buttons are selected at the same time.\");\n                        break;\n                    }\n\n                    if (radioDeleteCustomer.isChecked() && radioDeleteProduct.isChecked()) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"Neither Product and Customer radio buttons are selected at the same time\");\n                        textViewDeleteCustomerOrProductsErrorMsg.setText(\"Please select Product Customer checkbox.\");\n                        break;\n                    }\n                    textViewDeleteCustomerOrProductsErrorMsg.setText(\"\");\n\n                    if (!radioDeleteConfirm.isChecked()) {\n                        Log.d(\"ManagerOrderBoardSettings validation :\", \"User needs to confirm delete.\");\n                        textViewDeleteCustomerOrProductsErrorMsg.setText(\"Please please check the Delete Confirm checkbox. \");\n                        break;\n                    }\n                    textViewDeleteCustomerOrProductsErrorMsg.setText(\"\");\n\n                    if (isValid) {\n                        // delete\n\n                        if(radioDeleteCustomer.isChecked())\n                        {\n                            // delete customer\n                            //\n                            OrdersBoardServices.deleteCustomerFromFarm(spinnerDeleteCustomer.getSelectedItem().toString(), context);\n                        }\n                        else\n                        {\n                            // Delete Product\n                            //\n                            OrdersBoardServices.deleteProductFromCustomerInFarm(spinnerDeleteProduct.getSelectedItem().toString(),\n                                    spinnerDeleteCustomer.getSelectedItem().toString(), context);\n\n                        }\n\n                        // reset error message\n                        textViewDeleteCustomerOrProductsErrorMsg.setText(\"\");\n\n                        // reset variables including the delete confirm\n                        //\n                        viewDeleteCustomerOrProducts.setVisibility(View.GONE);\n                        viewDeleteCustomerOrProducts.setElevation(10);\n                        imageButtonCloseDeleteCustomerOrProducts.setVisibility(View.GONE);\n                        buttonDeleteCustomerOrProductsFromDatabase.setVisibility(View.GONE);\n                        spinnerDeleteCustomer.setVisibility(View.GONE);\n                        spinnerDeleteProduct.setVisibility(View.GONE);\n                        textViewDeleteCustomerOrProductsErrorMsg.setVisibility(View.GONE);\n                        buttonDeleteCustomerOrProductsFromDatabase.setEnabled(false);\n                        radioDeleteConfirm.setChecked(false);\n                        radioDeleteCustomer.setChecked(true);\n                        radioDeleteProduct.setChecked(false);\n\n                        // enable components for adding item\n                        //\n                        buttonAddNewOrder.setVisibility(View.VISIBLE);\n                        buttonAddNewCustomer.setVisibility((View.VISIBLE));\n                        buttonAddNewProduct.setVisibility((View.VISIBLE));\n                        buttonOpenDeleteCustomerOrProducts.setVisibility((View.VISIBLE));\n                        formEditTextDatePicker.setEnabled(true);\n                        formSpinnerCustomers.setEnabled(true);\n                        formSpinnerProducts.setEnabled(true);\n                        formEditTextProductQuantity.setEnabled(true);\n\n                        // update the form spinners\n                        //\n                        OrdersBoardServices.UpdateSpinnerWithCustomerNames(formSpinnerCustomers,context);\n                        OrdersBoardServices.UpdateSpinnerWithCustomerNames(spinnerAddProductCustomerName,context);\n                        break;\n                    }\n                }\n\n            }\n        });\n\n\n        formSpinnerCustomers.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n            @Override\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\n                // update the products dropdown to get the products for that customer\n                //\n                OrdersBoardServices.UpdateSpinnerWithProductNames(formSpinnerCustomers.getSelectedItem().toString(),context,formSpinnerProducts);\n            }\n\n            @Override\n            public void onNothingSelected(AdapterView<?> adapterView) {\n\n            }\n        });\n\n        // Search dB to populate customers and products spinners\n        //\n        OrdersBoardServices.UpdateSpinnerWithCustomerNames(formSpinnerCustomers,context);\n        OrdersBoardServices.UpdateSpinnerWithCustomerNames(spinnerAddProductCustomerName,context);\n        GeneralServices.SetDateToTodaysDate(formEditTextDatePicker,myCalendar);\n    }\n\n    public void onRadioButtonClicked(View view) {\n//        // Is the button now checked?\n//        boolean checked = ((RadioButton) view).isChecked();\n//\n//        // Check which radio button was clicked\n//        switch(view.getId()) {\n//            case R.id.radio_DeleteCustomer:\n//                if (checked) {\n//                    Toast.makeText(context, \"Delete customer\", Toast.LENGTH_SHORT).show();\n//\n//                    break;\n//                }\n//            case R.id.radio_DeleteProduct:\n//                if (checked) {\n//                    Toast.makeText(context, \"Delete product\", Toast.LENGTH_SHORT).show();\n//\n////                    OrdersBoardServices.UpdateSpinnerWithProductNames(spinnerDeleteCustomer.getSelectedItem().toString(), context,spinnerDeleteProduct);\n//                    break;\n//                }\n//        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/farmmanagerhelper/ManagerOrderBoardSettings.java b/app/src/main/java/com/example/farmmanagerhelper/ManagerOrderBoardSettings.java
--- a/app/src/main/java/com/example/farmmanagerhelper/ManagerOrderBoardSettings.java	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/app/src/main/java/com/example/farmmanagerhelper/ManagerOrderBoardSettings.java	(date 1651269778636)
@@ -145,8 +145,7 @@
                     isValid = GeneralServices.checkIfSpinnerIsNull(formSpinnerProducts);
                     if (!isValid) {
                         Log.d("ManagerOrderBoardSettings validation :", "No products selected");
-                        formErrorMsg.setText("You must add a Product for " + formSpinnerCustomers.getSelectedItem()+
-                                ". Click Add New Product button below");
+                        formErrorMsg.setText("You must add a Product for " + formSpinnerCustomers.getSelectedItem()+ ". Click Add New Product button below");
                         break;
                     }
                     formErrorMsg.setText("");
Index: app/src/main/res/layout/activity_manager_order_board_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#364CAF50\"\n    tools:context=\".ManagerOrderBoardSettings\">\n\n\n    <TextView\n        android:id=\"@+id/managerOrderBoardProduct\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"40dp\"\n        android:layout_marginEnd=\"28dp\"\n        android:text=\"Product:\"\n        android:textAlignment=\"textEnd\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/SpinnerManagerOrderBoardSettingsProduct\"\n        app:layout_constraintTop_toBottomOf=\"@+id/managerOrderBoardCustomer\" />\n\n    <TextView\n        android:id=\"@+id/managerOrderBoardQuantity\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"52dp\"\n        android:layout_marginEnd=\"28dp\"\n        android:text=\"Quantity:\"\n        android:textAlignment=\"textEnd\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/editTextProductQuantity\"\n        app:layout_constraintTop_toBottomOf=\"@+id/managerOrderBoardProduct\" />\n\n    <TextView\n        android:id=\"@+id/formErrorMsg\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"25dp\"\n        android:text=\"\"\n        android:textAlignment=\"center\"\n        android:textColor=\"#FF0000\"\n        android:textSize=\"14sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.404\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.489\" />\n\n    <TextView\n        android:id=\"@+id/managerOrderBoardCustomer\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"48dp\"\n        android:layout_marginEnd=\"28dp\"\n        android:text=\"Customer:\"\n        android:textAlignment=\"textEnd\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/spinnerManagerOrderBoardSettingsCustomer\"\n        app:layout_constraintTop_toBottomOf=\"@+id/managerOrderBoardDateTag\" />\n\n    <TextView\n        android:id=\"@+id/managerOrderBoardDateTag\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"24dp\"\n        android:layout_marginEnd=\"28dp\"\n        android:text=\"Date:\"\n        android:textAlignment=\"textEnd\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toStartOf=\"@+id/EditTextManagerOrderBoardSettingsDatePicker\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <Spinner\n        android:id=\"@+id/spinnerManagerOrderBoardSettingsCustomer\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"30dp\"\n        android:layout_marginTop=\"32dp\"\n        android:layout_marginEnd=\"30dp\"\n        android:hint=\"Customer\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/EditTextManagerOrderBoardSettingsDatePicker\" />\n\n    <Spinner\n        android:id=\"@+id/SpinnerManagerOrderBoardSettingsProduct\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"30dp\"\n        android:layout_marginTop=\"36dp\"\n        android:layout_marginEnd=\"30dp\"\n        android:hint=\"Product\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/spinnerManagerOrderBoardSettingsCustomer\" />\n\n    <EditText\n        android:id=\"@+id/EditTextManagerOrderBoardSettingsDatePicker\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:layout_marginEnd=\"30dp\"\n        android:clickable=\"false\"\n        android:cursorVisible=\"false\"\n        android:focusable=\"false\"\n        android:focusableInTouchMode=\"false\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonManagerOrderSettingsAddNewOrder\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Add New Order\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.50\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.6\" />\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonManagerOrderSettingsAddNewCustomerWindow\"\n        style=\"?attr/materialButtonOutlinedStyle\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Add New Customer\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.8\" />\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonManagerOrderSettingsAddNewProduct\"\n        style=\"?attr/materialButtonOutlinedStyle\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Add New Product\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.50\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.7\" />\n\n    <EditText\n        android:id=\"@+id/editTextProductQuantity\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"48dp\"\n        android:layout_marginEnd=\"30dp\"\n        android:hint=\"Quantity\"\n        android:inputType=\"number\"\n        android:maxLength=\"6\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/SpinnerManagerOrderBoardSettingsProduct\" />\n\n    <!-- add customer popup -->\n\n    <com.google.android.material.button.MaterialButton\n        android:id=\"@+id/buttonManagerOrderSettingsOpeneDeleteCustomerOrProductPopup\"\n        style=\"?attr/materialButtonOutlinedStyle\"\n        android:layout_width=\"250dp\"\n\n        android:layout_height=\"wrap_content\"\n        android:text=\"Remove Customer Or Product\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.50\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.9\" />\n\n    <view\n        android:id=\"@+id/AddNewCustomerDialog\"\n        class=\"androidx.coordinatorlayout.widget.CoordinatorLayout\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"400dp\"\n        android:background=\"#FFFFFF\"\n        android:windowIsTranslucent=\"false\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.497\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.498\"\n        tools:context=\".ManagerOrderBoardSettings\"\n        android:visibility=\"gone\"\n            >\n\n        <ImageButton\n            android:id=\"@+id/imageButtonCloseNewCustomerWindow\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            app:srcCompat=\"@android:drawable/ic_menu_close_clear_cancel\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            />\n        <!--android:visibility=\"gone\"-->\n\n        <Button\n            android:id=\"@+id/buttonManagerOrderSettingsAddNewCustomerToDatabase\"\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"250dp\"\n            android:layout_marginStart=\"65dp\"\n\n            android:text=\"Add Customer\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" />\n\n\n        <EditText\n            android:id=\"@+id/EditTextNewCustomerName\"\n            android:layout_width=\"200dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"100dp\"\n            android:layout_marginStart=\"25dp\"\n            android:inputType=\"text\"\n            android:maxLength=\"30\"\n            android:hint=\"Name\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            />\n\n        <TextView\n            android:id=\"@+id/managerOrderBoardAddCustomerErrorMsg\"\n            android:layout_width=\"190dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"150dp\"\n            android:layout_marginStart=\"25dp\"\n            android:text=\"\"\n            android:textColor=\"#FF0000\"\n            android:textSize=\"14sp\"\n            android:textAlignment=\"center\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"/>\n\n    </view>\n\n<!-- add Product to customer popup -->\n\n    <view\n        android:id=\"@+id/AddNewProductDialog\"\n        class=\"androidx.coordinatorlayout.widget.CoordinatorLayout\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"400dp\"\n        android:background=\"#FFFFFF\"\n        android:windowIsTranslucent=\"false\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.497\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.498\"\n        tools:context=\".ManagerOrderBoardSettings\"\n        android:visibility=\"gone\"\n        >\n\n        <ImageButton\n            android:id=\"@+id/imageButtonCloseNewProductWindow\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            app:srcCompat=\"@android:drawable/ic_menu_close_clear_cancel\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            />\n        <!--android:visibility=\"gone\"-->\n\n        <Button\n            android:id=\"@+id/buttonManagerOrderSettingsAddNewProductToDatabase\"\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"250dp\"\n            android:layout_marginStart=\"75dp\"\n            android:text=\"Add Product\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" />\n\n        <Spinner\n            android:id=\"@+id/spinnerAddProductCustomerName\"\n            android:layout_width=\"200dp\"\n            android:layout_height=\"40dp\"\n            android:layout_marginTop=\"80dp\"\n            android:layout_marginStart=\"25dp\"\n            android:textSize=\"18sp\"\n            android:hint=\"Customer\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            />\n\n\n\n        <EditText\n            android:id=\"@+id/EditTextNewProductName\"\n            android:layout_width=\"200dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"150dp\"\n            android:layout_marginStart=\"25dp\"\n            android:inputType=\"text\"\n            android:maxLength=\"30\"\n            android:hint=\"Name\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            />\n\n        <TextView\n            android:id=\"@+id/managerOrderBoardAddProductErrorMsg\"\n            android:layout_width=\"190dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"200dp\"\n            android:layout_marginStart=\"25dp\"\n            android:text=\"\"\n            android:textColor=\"#FF0000\"\n            android:textSize=\"14sp\"\n            android:textAlignment=\"center\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"/>\n    </view>\n\n    <view\n        android:id=\"@+id/removeCustomerOrProductPopUp\"\n        class=\"androidx.coordinatorlayout.widget.CoordinatorLayout\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"400dp\"\n        android:background=\"#FFFFFF\"\n        android:windowIsTranslucent=\"false\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.497\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.498\"\n        tools:context=\".ManagerOrderBoardSettings\"\n        android:visibility=\"gone\"\n        >\n        <TextView\n            android:id=\"@+id/managerOrderBoardDeleteCustomerOrProductMessage\"\n            android:layout_width=\"190dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"50dp\"\n            android:layout_marginStart=\"20dp\"\n            android:text=\"Select What you would like to delete.\"\n            android:textSize=\"14sp\"\n            android:textAlignment=\"viewStart\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            />\n\n        <RadioGroup xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"100dp\"\n            android:layout_marginStart=\"20dp\"\n            android:orientation=\"vertical\">\n            <RadioButton android:id=\"@+id/radio_DeleteCustomer\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"Customer\" />\n            <RadioButton android:id=\"@+id/radio_DeleteProduct\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"Product\" />\n        </RadioGroup>\n\n        <ImageButton\n            android:id=\"@+id/imageButtonCloseDeleteCustomerOrProductPopUp\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            app:srcCompat=\"@android:drawable/ic_menu_close_clear_cancel\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"\n            />\n        <!--android:visibility=\"gone\"-->\n\n        <Button\n            android:id=\"@+id/buttonManagerOrderSettingsDeleteCustomerOrProduct\"\n            android:layout_width=\"120dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"320dp\"\n            android:layout_marginStart=\"75dp\"\n            android:text=\"DELETE\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" />\n\n        <Spinner\n            android:id=\"@+id/spinnerDeleteCustomer\"\n            android:layout_width=\"200dp\"\n            android:layout_height=\"40dp\"\n            android:layout_marginTop=\"170dp\"\n            android:layout_marginStart=\"25dp\"\n            android:textAlignment=\"center\"\n            android:textSize=\"18sp\"\n            android:hint=\"Customer\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            />\n\n        <Spinner\n            android:id=\"@+id/spinnerDeleteProduct\"\n            android:layout_width=\"200dp\"\n            android:layout_height=\"40dp\"\n            android:layout_marginTop=\"220dp\"\n            android:layout_marginStart=\"25dp\"\n            android:textAlignment=\"center\"\n            android:textSize=\"18sp\"\n            android:hint=\"Customer\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            android:visibility=\"gone\"\n            />\n\n        <RadioButton android:id=\"@+id/radio_DeleteConfirm\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"290dp\"\n            android:layout_marginStart=\"75dp\"\n            android:text=\"Confirm Delete\"\n            android:onClick=\"onRadioButtonClicked\"/>\n\n\n        <TextView\n            android:id=\"@+id/managerOrderBoardDeleteCustomerOrProductErrorMsg\"\n            android:layout_width=\"190dp\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"260dp\"\n            android:layout_marginStart=\"25dp\"\n            android:text=\"\"\n            android:textColor=\"#FF0000\"\n            android:textSize=\"14sp\"\n            android:textAlignment=\"center\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\"/>\n    </view>\n\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_manager_order_board_settings.xml b/app/src/main/res/layout/activity_manager_order_board_settings.xml
--- a/app/src/main/res/layout/activity_manager_order_board_settings.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/app/src/main/res/layout/activity_manager_order_board_settings.xml	(date 1651133170519)
@@ -400,7 +400,7 @@
             android:id="@+id/spinnerDeleteCustomer"
             android:layout_width="200dp"
             android:layout_height="40dp"
-            android:layout_marginTop="170dp"
+            android:layout_marginTop="180dp"
             android:layout_marginStart="25dp"
             android:textAlignment="center"
             android:textSize="18sp"
@@ -412,7 +412,7 @@
             android:id="@+id/spinnerDeleteProduct"
             android:layout_width="200dp"
             android:layout_height="40dp"
-            android:layout_marginTop="220dp"
+            android:layout_marginTop="230dp"
             android:layout_marginStart="25dp"
             android:textAlignment="center"
             android:textSize="18sp"
@@ -424,7 +424,7 @@
         <RadioButton android:id="@+id/radio_DeleteConfirm"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:layout_marginTop="290dp"
+            android:layout_marginTop="280dp"
             android:layout_marginStart="75dp"
             android:text="Confirm Delete"
             android:onClick="onRadioButtonClicked"/>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"1.8\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 521ffb5da67060121d4796e3ceece465daa76486)
+++ b/.idea/gradle.xml	(date 1683761410323)
@@ -4,17 +4,16 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="testRunner" value="PLATFORM" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="1.8" />
+        <option name="gradleJvm" value="11" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
             <option value="$PROJECT_DIR$/app" />
           </set>
         </option>
-        <option name="resolveModulePerSourceSet" value="false" />
       </GradleProjectSettings>
     </option>
   </component>
